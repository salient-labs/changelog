name: CI

on:
  pull_request:

  # Remove once pull requests are set up
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  format:
    name: Check formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: none

      - name: Install PrettyPHP
        run: composer create-project --no-interaction --no-progress --no-dev lkrms/pretty-php=0.4.22 build/pretty-php

      - name: Run PrettyPHP
        run: build/pretty-php/bin/pretty-php --diff

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "8.2"
          - "7.4"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none

      - name: Install dependencies
        run: composer install --no-interaction --no-progress

      - name: Run PHPStan
        run: vendor/bin/phpstan

  unit-tests:
    name: PHPUnit tests

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        php-version:
          - "8.2"
        include:
          - os: ubuntu-latest
            php-version: "8.1"
          - os: ubuntu-latest
            php-version: "8.0"
          - os: ubuntu-latest
            php-version: "7.4"
          - os: windows-latest
            php-version: "7.4"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP and Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: sqlite3
          coverage: pcov

      - name: Install dependencies
        run: composer install --no-interaction --no-progress

      - name: Run PHPUnit tests and generate code coverage report
        run: vendor/bin/phpunit --no-coverage --coverage-clover=coverage.xml

      - name: Upload code coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
